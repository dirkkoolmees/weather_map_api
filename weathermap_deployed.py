# -*- coding: utf-8 -*-
"""Weathermap_Deployed.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NJlsxqUI8efEcAivImrzDSwsS0mN4Zqk
"""

import pandas as pd
import dash
import dash_core_components as dcc
import dash_html_components as html
import requests
import json
import plotly.graph_objects as go
from datetime import date
from jupyter_dash import JupyterDash
import sys

today = date.today()
date = today.strftime("%B %d, %Y")

# Build App
app = dash.Dash(__name__)
server = app.server
#app = JupyterDash(__name__)
url_cities = 'https://raw.githubusercontent.com/icyrockcom/country-capitals/master/data/country-list.csv'

cities = pd.read_csv (url_cities)
rows = cities.shape[0]

key = '9bbc39261f05b59c5bbdbc5c8b25fc0a'

df_temp = pd.DataFrame(columns=['Country code', 'City', 'Lon', 'Lat', 'Temperature'])
a=0
for i in cities.capital:
  a=a+1
  percentage = "{:.0%}".format(a/rows)  
  b = ("Please wait, loading data: " + str(percentage) + ' ('+ i+' )')
  # \r prints a carriage return first, so `b` is printed on top of the previous line.
  sys.stdout.write('\r'+b)
  url = 'http://api.openweathermap.org/data/2.5/weather?q='+i+'&appid='+key+'&units=metric'

  response = requests.request("GET", url)
  if response.status_code != 404: #This is necessary to intercept unknown cities that would return a 404 error message (page not found)
    data = json.loads(response.text)
    country_code = data['sys']['country']
    city = data['name']
    lon = data ['coord']['lon']
    lat = data['coord']['lat']
    temperature = data['main']['temp']
    df_temp = df_temp.append({'Country code':country_code, 'City':city, 'Lon':lon, 'Lat':lat, 'Temperature':temperature}, ignore_index=True)

sys.stdout.write('\r')

fig = go.Figure(go.Densitymapbox(lat=df_temp.Lat, lon=df_temp.Lon, z=df_temp.Temperature, radius=15,
                                customdata=df_temp.City, hovertemplate='City: %{customdata}<br>Temperature (C): %{z}',
                                name = 'OpenWeather', reversescale = True, colorscale = 'RdBu', zmin = -20, zmax = 40))
fig.update_layout(mapbox_style="stamen-terrain", mapbox_center_lon=0, title_text = 'Temperatures in cities around the world on '+date)
fig.update_layout(margin={"r":0,"t":30,"l":0,"b":0})

app.layout = html.Div([
        html.Div([
        dcc.Graph(id='graph', figure = fig),
    ],style={'display': 'inline-block', 'width': '100%'})
        
])


# Run app
if __name__ == '__main__':
    app.run_server()



